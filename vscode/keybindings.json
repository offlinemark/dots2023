// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "shift+cmd+i",
    "command": "outline.focus"
  },
  {
    "key": "ctrl+1 ctrl+1",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+cmd+left",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  {
    "key": "ctrl+tab",
    "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },
  {
    "key": "ctrl+m",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+cmd+right",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build"
  },
  {
    "key": "ctrl+cmd+x",
    "command": "workbench.action.tasks.build"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
  },
  {
    "key": "ctrl+cmd+r",
    "command": "editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+f12",
    "command": "-editor.action.goToReferences",
    "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "shift+cmd+]",
    "command": "editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "alt+f12",
    "command": "-editor.action.peekDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+w o",
    "command": "workbench.action.minimizeOtherEditors"
  },
  {
    "key": "ctrl+w =",
    "command": "workbench.action.evenEditorWidths"
  },
  {
    "key": "ctrl+w l",
    "command": "workbench.action.focusRightGroup"
  },
  {
    "key": "cmd+k cmd+right",
    "command": "-workbench.action.focusRightGroup"
  },
  {
    "key": "ctrl+w h",
    "command": "workbench.action.focusLeftGroup"
  },
  {
    "key": "cmd+k cmd+left",
    "command": "-workbench.action.focusLeftGroup"
  },
  {
    "key": "ctrl+w k",
    "command": "workbench.action.focusAboveGroup"
  },
  {
    "key": "cmd+k cmd+up",
    "command": "-workbench.action.focusAboveGroup"
  },
  {
    "key": "ctrl+w j",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "-workbench.action.focusBelowGroup"
  },
  {
    "key": "ctrl+w s",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+w v",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "cmd+\\",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "shift+cmd+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "shift+cmd+t",
    "command": "workbench.view.extension.test"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+w ctrl+w",
    "command": "workbench.action.focusNextGroup"
  },
  {
    "key": "ctrl+cmd+n",
    "command": "workbench.action.duplicateWorkspaceInNewWindow"
  },
  {
    "key": "ctrl+cmd+e",
    "command": "workbench.extensions.action.installExtensions"
  },
  {
    "key": "ctrl+shift+]",
    "command": "editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+k f12",
    "command": "-editor.action.revealDefinitionAside",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+]",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+shift+cmd+[",
    "command": "references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "shift+alt+h",
    "command": "-references-view.showCallHierarchy",
    "when": "editorHasCallHierarchyProvider"
  },
  {
    "key": "ctrl+[",
    "command": "editor.action.referenceSearch.trigger"
  },
  {
    "key": "ctrl+cmd+r ctrl+cmd+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+u",
    "command": "workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "cmd+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+u",
    "command": "-editsHistory.moveCursorToPreviousEditInSameFile"
  },
  {
    "key": "ctrl+=",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward"
  },
  {
    "key": "ctrl+shift+[",
    "command": "references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+alt+f12",
    "command": "-references-view.findReferences",
    "when": "editorHasReferenceProvider"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+s",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+]",
    "command": "workbench.action.navigateForward"
  },
  {
    "key": "shift+cmd+[",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+cmd+w",
    "command": "-workbench.action.toggleTabsVisibility"
  },
  {
    "key": "ctrl+cmd+w",
    "command": "workbench.action.closeEditorsAndGroup"
  },
  {
    "key": "cmd+r cmd+d",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "cmd+r cmd+r",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "cmd+r cmd+w",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "cmd+r cmd+c",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "alt+1",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "alt+3",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "alt+2",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "ctrl+alt+o",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+alt+s",
    "command": "workbench.action.saveWorkspaceAs"
  }
]
